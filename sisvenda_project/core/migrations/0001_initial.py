# Generated by Django 4.2.7 on 2025-07-16 22:40

from decimal import Decimal
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('promotor', 'Promotor de Vendas'), ('cliente', 'Cliente'), ('gerente_estoque', 'Gerente de Estoque'), ('gerente_vendas', 'Gerente de Vendas'), ('gerenciador', 'Gerenciador')], default='cliente', max_length=20)),
                ('telefone', models.CharField(blank=True, max_length=15)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endereco', models.TextField()),
                ('limite_credito', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('status_financeiro', models.CharField(choices=[('aprovado', 'Aprovado'), ('pendente', 'Pendente'), ('reprovado', 'Reprovado')], default='pendente', max_length=20)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='GrupoProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Grupo de Produto',
                'verbose_name_plural': 'Grupos de Produtos',
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('estado', models.CharField(max_length=2)),
                ('codigo_ibge', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'verbose_name': 'Município',
                'verbose_name_plural': 'Municípios',
                'unique_together': {('nome', 'estado')},
            },
        ),
        migrations.CreateModel(
            name='Relatorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('produtos_estoque_baixo', 'Produtos com Estoque Baixo'), ('produtos_promocao', 'Produtos em Promoção'), ('produtos_por_grupo', 'Produtos por Grupo'), ('vendas_promotor', 'Vendas por Promotor'), ('comissoes', 'Relatório de Comissões'), ('pedidos_periodo', 'Pedidos por Período')], max_length=30)),
                ('titulo', models.CharField(max_length=200)),
                ('data_geracao', models.DateTimeField(auto_now_add=True)),
                ('parametros', models.JSONField(default=dict)),
                ('arquivo', models.FileField(blank=True, null=True, upload_to='relatorios/')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Relatório',
                'verbose_name_plural': 'Relatórios',
                'ordering': ['-data_geracao'],
            },
        ),
        migrations.CreateModel(
            name='PromotorVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comissao_percentual', models.DecimalField(decimal_places=2, default=Decimal('5.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('municipios_cobertura', models.ManyToManyField(related_name='promotores', to='core.municipio')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Promotor de Vendas',
                'verbose_name_plural': 'Promotores de Vendas',
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('nome', models.CharField(max_length=200)),
                ('custo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('margem_lucro', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('estoque', models.PositiveIntegerField(default=0)),
                ('percentual_promocao', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('impostos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('ativo', models.BooleanField(default=True)),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.grupoproduto')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
            },
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('data_pedido', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado_estoque', 'Aprovado pelo Estoque'), ('reprovado_estoque', 'Reprovado pelo Estoque'), ('aprovado_vendas', 'Aprovado pelas Vendas'), ('reprovado_vendas', 'Reprovado pelas Vendas'), ('programado', 'Programado para Entrega'), ('processado', 'Processado'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], default='pendente', max_length=20)),
                ('data_entrega_programada', models.DateField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cliente')),
                ('promotor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.promotorvenda')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'ordering': ['-data_pedido'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoStatusPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_anterior', models.CharField(blank=True, choices=[('pendente', 'Pendente'), ('aprovado_estoque', 'Aprovado pelo Estoque'), ('reprovado_estoque', 'Reprovado pelo Estoque'), ('aprovado_vendas', 'Aprovado pelas Vendas'), ('reprovado_vendas', 'Reprovado pelas Vendas'), ('programado', 'Programado para Entrega'), ('processado', 'Processado'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], max_length=20, null=True)),
                ('status_novo', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado_estoque', 'Aprovado pelo Estoque'), ('reprovado_estoque', 'Reprovado pelo Estoque'), ('aprovado_vendas', 'Aprovado pelas Vendas'), ('reprovado_vendas', 'Reprovado pelas Vendas'), ('programado', 'Programado para Entrega'), ('processado', 'Processado'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], max_length=20)),
                ('data_mudanca', models.DateTimeField(auto_now_add=True)),
                ('observacoes', models.TextField(blank=True)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_status', to='core.pedido')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Histórico de Status',
                'verbose_name_plural': 'Históricos de Status',
                'ordering': ['-data_mudanca'],
            },
        ),
        migrations.AddField(
            model_name='cliente',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.municipio'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='promotor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.promotorvenda'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ItemPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField()),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='core.pedido')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.produto')),
            ],
            options={
                'verbose_name': 'Item do Pedido',
                'verbose_name_plural': 'Itens dos Pedidos',
                'unique_together': {('pedido', 'produto')},
            },
        ),
    ]
